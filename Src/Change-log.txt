version 3.0:
Reworked version for release. Main features:
1. Added sort for commands to be executed in the proper order - user can inoput
   commands in any order
2. Added description headers to all routines
3. Added "open" routines for random number and Gauss-quadrature integration
4. Added "default" feature for fission parameters located in
   Data/Fission-Parameters.txt. These are set up on initialization and use a
   format similar to YAHFC commands. They can be overridden by subsequent YAHFC
   commands.

Needs replacements for random number generator and Gauss-quadrature in order to
be released as LLNL wants

version 3.1:

1. New Gauss-quadrature routines based on three-term recurrence relations
   and their eigenvalues.
2. New 64-bit random number generator based on combination of linear
   congruential and Marsaglia xor bit shift operators
3. Fixed sampling errors in pre-equilbrium module
   a. Error in unbiased sampling for pre-equilibrium gammas when cross 
      section is zero
   b. Error in setting angle theta with high-energy emission to a discrete
      state
4. Fixed order of input fission commands to ensure f_lev_ematch is 
   correctly set. The command f_lev_delta has an overide to ensure that
   ematch is above delta. Thus, f_lev_delta needs to be executed first.
5. Put explit intent() for each variable in each function and subroutine
6. Converted file level-density.f to FORTRAN90 and replaced with
   level-density.f90.
7. Added warning when trying to use option "optical_code". No longer used as
   FRESCO is now the only code used with this package.
8. Added warning with option "cs_scale". No longer used and is superceded with 
   the option "cs_unit".
9. Fixed error in KD proton optical potentials in fresco-potentials.f90 

version 3.2

1. All particle types are operational with default optical model potentials. All
   particles can be used as projectiles and ejectiles. By default particles
   d - alpha are excluded as ejectiles and need to be activated with the
   option max_particles. For charged particles the elastic angular distributions
   are given as a ratio with respect to Rutherford scattering.
2. Changed how the optical model is set with the variable particle(k)%opt_pot.
   This is an integer representing one the available optical models for the
   particle k.
3. Decoupled DWBA states in the continuous energy bins from the bin structure.
   It is no longer necessary to rerun fresco if you change the value of de 
   from calculation to calculation.
4. Fixed bug for !-comments placed after valid input. There was a crash if 
   part of the input was optional and used a !-comment.
5. Changed name of file optical_setup.f90 to optical-setup.f90 to make it
   conform to the naming convention used for other files containing
   subroutines.

version 3.3

1. Changed the way emission spectra are printed. They are now in bins centered
   about the printed energy with spacing +/- de/2. At Eout = 0.0, the spectra
   are zero. 
2. Added samples for the elastic channel at the very end of the MC sampling. 
   The elastic events are printed along with all the MC samples with the 
   command dump_events.

version 3.4

1. Fixed error in Legendre expansion for angular distributions from FRESCO. 
   Expanded the angualar distributions for Shape Elastic to 200 points for 
   x=(-1,1).

Version 3.5

1. Completed expansion of angular distribution for all elastic channels, and
   total elastic = Shape + Compound. Added print out of Legendre coefficients.
2. Fixed "elastic" for charged particles. Elastic is printed as a ratio relative
   to Rutherford scattering. Exception: Compound elastic is printed as
   crosssection. The Shape Elastic (from optical model) and total Elastic 
   angular distributions are printed as ratio relative to Rutherford.
2. Improved sampling of emitted angles for primary decays, coupled-channels, 
   DWBA excitations. 
3. Modified angular distributions for inelastic channels. Inelastic scattering
   spectra are collected for each emission energy in 11 bins from x=(-1,1) 
   with dx = 0.2. These are then expanded with a Legendre expansion and 
   angular distributions are reconstructed on a grid with dx = 0.1. The number 
   of Legendre coefficients is based on the actual number of counts in that 
   channel. 
4. Modified angular distributions for all Channels. Inelastic scattering
   spectra are collected for each emission energy in 11 bins from x=(-1,1) 
   with dx = 0.2. These are then expanded with a Legendre expansion and 
   angular distributions are reconstructed on a grid with dx = 0.1. The number 
   of Legendre coefficients is based on the actual number of counts in that 
   channel.
5. Corrected output of level # in the files defining discrete states. The 
   ground state is level # 0.
6. Denoted the target state in output files, inlcuding spin, parity and
   excitation energy.
7. Print more information for properties of final state, whether an inelastic
   reaction, or final state of residual nucleus. State number, spin, parity,
   excitation energy.
8. Fixed print out for charged particles with small cross sections. Note to
   screen when absorption cross section < 1.0d-9 (b), and skipping decay
   process.
9. Added notification to screen during run if width fluctuations are being 
   applied to that incident energy. Also, added notification if width 
   fluctions option is off.
10.Added consistent threshold for minimum cross section threshold.
11.Fixed identification of emitted particles for inelastic reactions to be
   the same as incident particle. Prior it was set up assuming neutrons.

Version 3.6
1. Fixed error in mass of residual printed in Exit Cannel files.
2. Fixed error in "particle" multiplicities in Exit Channel cross section files.

Version 3.7
1. Fixed error in Q-values
2. Added print out of total "Elastic" data for charged particles similar to
   what was implmented for "Shape" (or optical model). For each energy, the
   ratio averaged over cos(theta) is printed. In general, due to the 1(1-x)^2
   factor, the ratio at x=1 is 1 for "shape", and shape >>> compound.
3. Made sure version number was updated in modules.f90

Version 3.8
1. Fixed problem where Elastic_cs.dat wasn't showing up.com

Version 3.9 
1. Added feature to adjust a-parameter when fitting to D0 to provide a similar
   feature as in TALYS. 
2. Made some changes to option names for global and nucleus specfic
   level-density options
3. Adjusted order options are executed and adjusted how default parameters are
   set while setting options and values to improve set up. Also, removed some
   speghetti code that crept in as things were added over time.
4. Fixed what was likely a bug in the boost matrix for cases where initial
   kinetic energy is input with a spread. The boost matrix was setup with the 
   central value and not adjusted for the spread.
5. Fixed typo in output file while describing the vibrational collective
   enhancement factor.

Version 3.10
1. Fixed variable-type mismatch in HF-decay-MC.f90. Corrected L_ang and Max_L
   from integer(kind=8) to integer(kind=4). Potential issue with function poly
2. Fixed some warnings for unitialized variables. They were initialized in
   if statements, so they were "spurious" warnings.

Version 3.11
1. Added consistent options for pre-equilibrium all parameters that can be 
   controlled with inputs, e.g., Rpp, etc
2. Fixed error in well in pre-equilibrium model for incident protons, had same
   value as for incident neutrons.
3. Fixed problem with setting Preeq_V < Preeq_V1, which leads to funny looking
   pre-equilibirum spectrum. Now, if user sets Preeq_V < Preeq_V1, Preeq_V1 =
   Preeq_V - 3. Mostly, a failsafe mode.
4. Reverted back to pure step function in the finite well routine in
   pre-equilibirum model.
5. Added randomness to initial seed if not set with command ran_seed.
   Previously, iseed =  3141592654_int_64. Now, 
   call system_clock(COUNT=cnt,COUNT_RATE=cnt_r,COUNT_MAX=cnt_m) is made 
   to alter the seed at runtime so that iseed = iseed + max(mod(cnt,100000),1). 
   Also, iseed is ensured to be odd. This adds randomness to the start so that 
   successive runs won't be exactly the same. Not used if iseed is set with 
   ran_seed.

Version 3.12
1. Fixed issue with setting up incident energies while calling frescox. Also,
   fixed mixup between relative (COM) and lab frame energies for incdient
   projectiles and calculating and storing transmission coefficients.

Version 3.13
1. Fixed issue with defining channels tht was messed up when not having protons
   or neutrons as incident particles.
2. Altered pre-equilibrium spectra files to permit incident energies greater 
   than 100 MeV, should be OK up to 999.9999 - but note that YAHFC doesn't
   do relativistic kinematics yet.
3. Fixed issue with delta E for outgoing spectra that would be incorrectly set 
   for some values of de for the continous energy bins.
4. Added python parsing scripts to convert YAHFC output into a GNDS xml file 
   and a python script to extract data from the GNDS xml file to plot. For Ian 
   Thompson. REQUIRES that FUDGE be installed and in PYTHONPATH.

Version 3.14 - never an official release
1. Fixed energy misalignment for transmission coefficients when computing the 
   HF denominators for reactions not involving incident neutrons and for
   outgoing particles not involving neutrons.
2. Made improvements to zero-energy transitions, i.e., transitions to bins 
   whose centroids are the same. Allow transitions within the bin. Probably
   doesn't affect the thrshold behavior that much.
3. Improved performance of the interpolating routne to find the transmission
   coefficients for a given energy on the computed grid - 6x speed up.

Version 3.15
1.  Fairly major reorganization in the structure of how decays are selected.
    a. Correctly imposed max_particle(k) limit during the decay sequence. 
       Changed array HF_prob from cumulative sum of probabilities to
       just the probability for that decay type and added mechanism
       to skip and renormalize if attempting to decay particle type k that 
       violates max_particle(k). This fixed several potential array out
       of bounds errors.
    b. Changed "noise" in the energies of emitted particles. Returned to 
       sampling decays explicitly from center of bins and adding "noise" after
       the decays. Previously, the "noise" was added at the point of sampling,
       which caused problems with energy conservation for later decays, which
       had to be rebaselined. Much cleaner with better energy conservation.
2.  Added feature with command "explicit_channels". If true, each
    decay sequence, including order, is a distinct channel; i.e., outgoing
    channels npd, ndp, dnp, pnd, pdn, dpn are distinct channels. If false, 
    they are the treated as the same channel and printed in directories
    by the number of particles, e.g.,  2npd.
3.  Moved printed preequilbrium and direct spectra to the "Spectra" directory.
4.  Added printing of the preequilibrium cross section into the main reaction
    directory along with "Total", "Absorption", etc.
5.  Added ability in commands that need a particle identifier to use the labels
    n, p, d, t, h, a in addition to the internal number 1, 2, 3, 4, 5, 6.
6.  Extended integer encoding data to define channels based on the particle
    types to kind=8. This increases the number of allowed particles defining
    a channel from 10 to 20.
7.  Cleaned up several arrays and subroutines to remove data that wasn't needed.
8.  Fixed a small error in HF-primary-decay-setup.f90 that offset the looping 
    over bins. Didn't have much of an effect.
9.  Laid foundation for non-equal excitation energy bins. In addition to energy
    for each bin, also added width of the bin. Made changes internally to use
    this value instead of the global de variable (hopefully everywhere). 
    Nonequal bins will likely be based on a multiplicative factor of a 
    base bin size at lower excitation energies that later increases. 
    Unfortunatlely, this also means that it is a bit more difficult to 
    find a bin based on the energy.
10. Removed interpolation subroutine for EM transmission coefficients used to 
    sum the HF denominators in HF-primary-decay-setup.f90 to make it 
    conform with other calculations of the HF denominators and probabilities. 
    As a consequence, the file HF-interpolate.f90 is no longer used, and can 
    be removed.

Version 3.16
1.  Fixed error in subroutine Fission_transmission that caused a subscript
    out of bounds CTD. Added blank line before the Q value for readibility. 
2.  Fixed bad Q value for exit channels when explicit_channels = .false.
3.  Fixed not printing mass of emitted particles when 
    explicit_channels = .false.
4.  Made explicit_channels = .false. the default. 
5.  Fixed error in function compound_cs.
6.  Implemented dynamic setting of max_J_allowed based on maximum 
    angular momentum in the compound nucleus as computed from the tranmission
    coefficients. Also, checked spins of discrete states to ensure max_J_allowed
    is greater. Still capped at max_J_allowed = 40 for now.
7.  Further clean up of energy width de to transition towards bin widths 
    defined for each bin.
8.  Set smearing width for x-particle spectra and preequilibirum and direct
    spectra to .2 MeV.
9.  Fixed error introduced in 3.14 while collecting elastic events for neutrons.
10. Disabled option to scale elastic for charged particle projectiles.
11. Fixed bug where protons weren't computing DWBA excitations.

Version 3.17
1.  Added new feature where all inputs requiring Z A can be accessed with 
    isotope label, e.g., instead of using 92 238, one input U238, or 238U.
2.  Fixed error where fitting to a-parameter was incorrectly set, leading to
    a fit to D0 with the shell correction instead.

Version 3.18
1.  Put bypass in fresco-setup.f90 to address problems where FRESCO returns 
    GARBAGE for low-energy charged particles. A check is made on the classical
    turning radius. If this is greater than 5x the radius of the nuclear 
    potential, then skip the call to FRESCO, set "elastic" to Rutherford and 
    set all transmission coefficients and coupled-channels cross sections
    to zero. Required modification with call to FRESCO being moved to a 
    subroutine. This fixes an error introduced in 3.17 where a clumsy attempt
    to address this issue by examining FRESCO outputs.
2.  Fixed error for charged particles where angular distributions for 
    non-elastic coupled-channels excitations were divided by Rutherford.
3.  Moved FRESCO *.in, *.out, and *.err files to the sub-directory 
    "Fresco-files" to reduce clutter in the main execution directory. 
4.  Added "cutoff" for writing data for inelastic excitations to discrete 
    states. If the largest cross section (as a function of incident energy) 
    falls below a threshold of 20*absorption(in)/num_samp, the file will not be
    opened and written too. Note that this is dynamic, in that the check is
    for each incident energy. For the most part, the smallest cross section that
    would be observable is with a single event to a channel, which would be
    of the order absorption/num_samp. This would eliminate files for discrete
    states with no cross section.
5.  The statistics for the angular distributions is increased by "over sampling"
    the angles for each emitted particle. A total of num_theta values of the
    angle theta are sampled for each particle. The default is num_theta = 10.
    Each of these angles are transformed to the COM and Lab frames, and then 
    collected in the angular distributions. Each set of angles, labeled nang,
    are treated as a distinct set of samples. At present, this increases the 
    CPU time by ~ 2x, but increases the angular statistics by 10x 
    (improves uncertainty by 3x). 
6.  Introduced command "num_theta_angles N" to allow the user to specify the 
    num_theta. It is required that N >= 1. If a number less than 1 is entered, 
    it is overridden and num_theta = 1.
7.  Changed the default delta_e to 0.1 MeV.
8.  Put in trap on obsolete command "fit_aparam" to warn user and effectively 
    call the commands "lev_fit_do y" and "lev_fit_aparam n", which is
    essentially the default to fit to D0 by adjusting the shell correction
    parameter.

Version3.19
1.  Fixed error due to uninitialized use of variable prob. Wasn't used and
    was innocuous.
    
Version 3.20
1.  Set up command "event_generator answer" to run YAHFC as an event generartor
    and not collect spectra or cross section data. Also, created directory
    in the "data library" area where the events are printed to. For example,
    Target/projectile/Event-files.
2.  Removed unused array test_spectra declared in modules.f90.
3.  Cleaned up subroutine get_binding_energies. Switched to allocated
    arrays rather than using large declared arrays to avoid potential
    problems with oveflowing the stack. 
4.  Switched to an allocatable array in subroutine cum_rho, which fits the 
    cumulative level density. The array cumr(:) was delclared dimension 10000,
    which gave a warning related to being too large for the stack. 

Version 3.21
1.  Fixed array out of bounds in cumr, start array at 0.
2.  Changed output format to 1pe16.9 in fresco-setup.f90 and optical-setup.f90


Version 3.22
1.  Fixed error arising from a blank line being in the string of input commands.
2.  Implemented a dynamic check and rest of the FRESCO parameter hcm < 0.2/k
    to prevent FRESCO crashes.
3.  Added file with particle properties in library directory
4.  Fixed incorrect spin assignment for alpha particles
5.  Fixed error where coupled-channels cross sections were inadvertently set
    to zero.

Version 3.23
1.  Fixed error where coupled-channels cross sections were inadvertently set
    to zero for charged particles. 
2.  Adjusted decay chain search to fix subscript out of range with tritons
    as an exit particle.
3.  Forced an assignment for ground-state spin and parity when not in RIPL-3
    file, but needed as an end-product in the decay chain. Set to J = 0 for
    A even and J = 0.5 for A odd, and parity = +1. Otherwise a seg fault will
    occur.

Version 3.24
1.  Made subroutine that sets up the decay chains more efficient.
2.  Adjusted the maximum value for the orbital angular momentum for each
    particle. It is now set in fresco-setup.f90 and is based on the maximum
    incident energy requested, now lmax = 2*R*k_max, with R being the nuclear
    radius.
3.  Fixed parts of subroutine get_spectrum where errors occured due to the 
    requested nucleus not appearing in the RIPL-3 file. In all cases, if the
    nucleus is absent, J = 0 if A even, and J = 0.5 if A odd, and parity is +.
4.  Also, extended the excitation energy bins for all nuclei up to the neutron
    separation energy.
5.  Adjusted decay algorithms to include the Coulomb Barrier information to
    limit the decays of charged particles. Important for alphas, which are
    unbound, and nearly limitless for heavy nuclei. The Colomb barrier tests
    limits some channels that will be extremely weak, and thus avoids including
    them in the overall calculation. Including the Coulomb barrier test in
    the set up forces the weak channels not to occur, which would give an
    error while searching for the nonexistent channel.
6.  Adjusted model for the oribital angular momentum for emitted particle 
    in the pre-equilibrium model (two-component exciton model) to assume that
    particles are emitted at the nuclear surface rather than the classical 
    impact parameter for the incident projectile with orbital angular
    momentum l. Reduces the overall emitted l.
7.  Fixed error sampling pre-equilibrium particles with unbiased sampling.
    Affected cases with multiple particles being emitted.
8.  Fixed error in writing and reading transmission coefficients and energy
    grid if the number of data was exactly a multiple of 10.
9.  Adjusted Coulomb Barrier limits to help reduce channels that will have 
    extremely small cross sections.
10. Added check on incident energies to see if the compound system would be
    excited below the continuous energy grid. If so, the calculation is skipped.
    This affects loosely bound systems near the drip line where HF is not 
    really applicable, and for alphas on heavy nuclei where the separation
    energy is negative, i.e., unbound, and would try to create a compound
    with negative excitation energy.

Version 3.25
1.  Implemented nonequal energy bins with option "use_unequal_bin y". With this
    option, the base energy scale is E_base=S(projectile) + 2 MeV. A bin width 
    of de (either default or with option "delta_e de") is used upto E_base, 
    then 2*de for E_base <= Ex < 2*E_base, 4*de for 2*E_base <= Ex < 4*E_base,
    and 8*de fpr Ex >= 4*E_base.
2.  Major cleanup to modularize components of the code. Separate subroutines
    were implemented to:
    a.  Print library files 
    b.  Print particle spectra 
    c.  Set up of EM strength functions
    d.  Fit to Gamma_gamma
3.  Increased efficiency for angular distributions by storing Legendre
    polynomials in arrays for later use. Used for primary decay, elastic,
    and all direct and dwba channels.
4.  Increased efficiency by switching to a 32-bit random number generator (RNG) 
    where there wouldn't be a significant of accuracy. The 64-bit RNG is used 
    only to select decays from the HF bins where there are potentially a 
    large number of possible decays.
5.  Implemented new option to calculate cross sections on "xs_only y".
6.  Put in code to do MPI parallelization over the MC sample loop. Majority of
    reads and writes are restricted to iproc = 0. Still needs to be fully 
    debugged and numerous "stop" directives need to be replaced with 
    "call MPI_Abort". It would also be useful to implement an error code system.
    The call to frescox also needs to be parallelized, but this requires 
    modifications to fresco. 

Version 3.26
1.  Fixed problem with nucleus(i)%nbin_em not being defined, leading to
    potential runaway writing of the EM strength parameters.
2.  Fixed error reading in and assigning E1 strength parameters from the
    "exp" evaluated data file. 

Version 3.27
1.  Sped up subrotuine Boost_frame by using intrinsic function matmul and
    aligning due loops to better use memory arrays.
2.  Fixed a bug in the E1 strength parameters where every other nucleus would
    not get assigned properly because the file was not closed before the
    subroutine returned.
3.  Fixed bug in subroutine calling fresco where the radius for the potential 
    inadvertantly used the projectile (A_target**(1/3) + A_proj**(1/3)). A_proj
    should only be used for alphas and heavier projectiles.This error was 
    introduced in 3.18 when the bypass subroutine was implemented.
4.  Minor fix to the MPI code: replaced variable mpi_error to ierr to avoid
    conflict with intrinsic and fixed an incorrect call to MPI_Bcast. Further
    integration with MPI will occur in 3.28.

Version 3.28
1.  Fixed MPI implementation

Version 3.29
1.  Fixed bugs in MPI implementation from transfer to Quartz for parallel loop
    over Monte Carlo sampling. Paralelization for the HF denominators and 
    primary decay are still in the works.
2.  Fixed unnecessary writes to screen during MPI runs
3.  Added option for "verbose_output y/n", If "y", then periodic updates to
    screen given during the run, e.g., current energy, and some stats on the
    run.
4.  Added option suppress outfile. Two mechanisms: 
    a. Calling option "file none" 
    b. Calling option "write_outfile y/n". Ans asnwer of "n" suppresses priting
       of the .out file even if the option "file faile_name" is given. 

Version 3.30
1.  Added MPI parallelization to subroutine HF_denominator().
2.  Minor fixes to prints, etc.

